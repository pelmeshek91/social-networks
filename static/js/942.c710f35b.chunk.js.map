{"version":3,"file":"static/js/942.c710f35b.chunk.js","mappings":"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","sources":["../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/tweetsSelectors.js","components/FilteredUsers/FilteredUsers.jsx","components/Card/CardDetails.styled.js","components/Card/CardDetails.jsx","components/CardsList/CardsList.jsx","pages/CardsPage/CardsPage.styled.js","pages/CardsPage/CardsPage.jsx"],"sourcesContent":["// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nexport const selectUsersTweets = (state) => state.users.users;\r\nexport const selectUsersFilter = (state) => state.users.filter;\r\n\r\nexport const selectFilteredUsers = createSelector(\r\n  [selectUsersFilter, selectUsersTweets],\r\n  (filter, users) => {\r\n    if (filter === \"all\") return users;\r\n    if (filter === \"follow\")\r\n      return users?.filter((user) => user.followers === 100500);\r\n    if (filter === \"following\")\r\n      return users?.filter((user) => user.followers === 100501);\r\n  }\r\n);\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectUsersFilter } from \"../../redux/tweetsSelectors\";\r\nimport { actions } from \"../../redux/tweetsSlice\";\r\nimport \"./filter.css\";\r\nconst FilteredUsers = () => {\r\n  const filter = useSelector(selectUsersFilter);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div className=\"select-wrap\">\r\n      <select\r\n        className=\"select\"\r\n        id=\"standard-select\"\r\n        name=\"priority\"\r\n        onChange={(e) => dispatch(actions.changeFilter(e.target.value))}\r\n        value={filter}\r\n      >\r\n        <option value=\"all\">All</option>\r\n        <option value=\"follow\">Follow</option>\r\n        <option value=\"following\">Following</option>\r\n      </select>\r\n      <span className=\"focus\"></span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FilteredUsers;\r\n","import styled from \"styled-components\";\r\n\r\nexport const CardItem = styled.li`\r\n  position: relative;\r\n  padding-top: 28px;\r\n  padding-bottom: 36px;\r\n  border-radius: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  list-style: none;\r\n  width: 380px;\r\n\r\n  background-color: #5736a3;\r\n`;\r\nexport const CardsUserList = styled.ul`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  gap: 60px;\r\n`;\r\n\r\nexport const Logo = styled.img`\r\n  position: absolute;\r\n  top: 20px;\r\n  left: 20px;\r\n`;\r\n\r\nexport const BtnFollow = styled.button`\r\n  border: none;\r\n  border-radius: 10px;\r\n  background-color: #ebd8ff;\r\n  color: #373737;\r\n  font-weight: 700;\r\n  font-size: 18px;\r\n  padding: 14px 56px;\r\n`;\r\n\r\nexport const BtnFollowing = styled.button`\r\n  border: none;\r\n  border-radius: 10px;\r\n  background-color: #5cd3a8;\r\n  color: #373737;\r\n  font-weight: 700;\r\n  font-size: 18px;\r\n  padding: 14px 39px;\r\n`;\r\n\r\nexport const Avatar = styled.img`\r\n  width: 70px;\r\n  height: 70px;\r\n  border-radius: 50%;\r\n  border: 5px solid #ebd8ff;\r\n`;\r\n\r\nexport const Tweets = styled.p`\r\n  position: relative;\r\n  margin-top: 26px;\r\n  margin-bottom: 16px;\r\n  color: #ebd8ff;\r\n  &::before {\r\n    content: \"\";\r\n    position: absolute;\r\n    display: block;\r\n    bottom: 77px;\r\n    right: 80px;\r\n    width: 156px;\r\n    height: 5px;\r\n    border-bottom: 5px solid rgb(235, 216, 255);\r\n  }\r\n  &::after {\r\n    content: \"\";\r\n    position: absolute;\r\n    display: block;\r\n    bottom: 77px;\r\n    left: 80px;\r\n    width: 156px;\r\n    height: 5px;\r\n    border-bottom: 5px solid rgb(235, 216, 255);\r\n  }\r\n`;\r\n\r\nexport const Followers = styled.p`\r\n  margin-bottom: 26px;\r\n  color: #ebd8ff;\r\n`;\r\n","import { useDispatch } from \"react-redux\";\r\nimport { updateUsersTweetsThunk } from \"../../redux/tweetsOperations\";\r\nimport * as image from \"../images\";\r\nimport {\r\n  Avatar,\r\n  BtnFollow,\r\n  BtnFollowing,\r\n  CardItem,\r\n  Followers,\r\n  Logo,\r\n  Tweets,\r\n} from \"./CardDetails.styled\";\r\n\r\nconst CardDetails = (user) => {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <CardItem>\r\n      <Logo src={image.logo} alt={user.user} />\r\n      <img src={image.picture} alt={user.user} />\r\n      <Avatar src={user.avatar} alt={user.user} />\r\n\r\n      <Tweets>{user.tweets} TWEETS</Tweets>\r\n      <Followers>\r\n        {new Intl.NumberFormat().format(user.followers)} FOLLOWERS\r\n      </Followers>\r\n      {user.followers === 100500 ? (\r\n        <BtnFollow\r\n          onClick={() =>\r\n            dispatch(\r\n              updateUsersTweetsThunk({\r\n                ...user,\r\n                followers: user.followers + 1,\r\n              })\r\n            )\r\n          }\r\n        >\r\n          FOLLOW\r\n        </BtnFollow>\r\n      ) : (\r\n        <BtnFollowing\r\n          onClick={() =>\r\n            dispatch(\r\n              updateUsersTweetsThunk({\r\n                ...user,\r\n                followers: user.followers - 1,\r\n              })\r\n            )\r\n          }\r\n        >\r\n          FOLLOWING\r\n        </BtnFollowing>\r\n      )}\r\n    </CardItem>\r\n  );\r\n};\r\n\r\nexport default CardDetails;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport CardDetails from \"../Card/CardDetails\";\r\nimport { selectFilteredUsers } from \"../../redux/tweetsSelectors\";\r\nimport { CardsUserList } from \"../Card/CardDetails.styled\";\r\n\r\nimport { getUsersTweetsNextThunk } from \"../../redux/tweetsOperations\";\r\n\r\nconst CardsList = () => {\r\n  const filteredUsers = useSelector(selectFilteredUsers);\r\n  const dispatch = useDispatch();\r\n  const { page, isEnd } = useSelector((state) => state.users);\r\n\r\n  return (\r\n    <>\r\n      <CardsUserList>\r\n        {filteredUsers?.map((user) => (\r\n          <CardDetails key={user.id} {...user} />\r\n        ))}\r\n      </CardsUserList>\r\n      {filteredUsers && !isEnd && (\r\n        <button onClick={() => dispatch(getUsersTweetsNextThunk(page))}>\r\n          Load more\r\n        </button>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CardsList;\r\n","import { NavLink } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const Home = styled(NavLink)`\r\n  padding: 12px 25px;\r\n  margin-left: 30px;\r\n  margin-top: 10px;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  justify-content: space-between;\r\n  width: 100px;\r\n\r\n  color: #ebd8ff;\r\n  background-color: #5736a3;\r\n  letter-spacing: 1px;\r\n  text-decoration: none;\r\n\r\n  border: transparent;\r\n\r\n  border-radius: 10px;\r\n`;\r\n","import { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getUsersTweetsThunk } from \"../../redux/tweetsOperations\";\r\n\r\nimport FilteredUsers from \"../../components/FilteredUsers/FilteredUsers\";\r\nimport CardsList from \"../../components/CardsList/CardsList\";\r\nimport { Home } from \"./CardsPage.styled\";\r\n\r\nconst CardsPage = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getUsersTweetsThunk());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div>\r\n      <Home to=\"/\">Home</Home>\r\n      <FilteredUsers />\r\n      <CardsList />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardsPage;\r\n"],"names":["NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","Array","_key","_len2","funcs","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","Error","_directlyPassedOption2","finalMemoizeOptions","isArray","dependencies","every","dep","dependencyTypes","map","name","join","getDependencies","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","createSelector","selectUsersFilter","state","users","filter","selectFilteredUsers","user","followers","useSelector","dispatch","useDispatch","_jsxs","className","children","id","onChange","e","actions","changeFilter","target","_jsx","CardItem","styled","li","_templateObject","_taggedTemplateLiteral","CardsUserList","ul","_templateObject2","Logo","img","_templateObject3","BtnFollow","button","_templateObject4","BtnFollowing","_templateObject5","Avatar","_templateObject6","Tweets","p","_templateObject7","Followers","_templateObject8","src","alt","image","avatar","tweets","Intl","NumberFormat","format","onClick","updateUsersTweetsThunk","_objectSpread","filteredUsers","_useSelector","page","isEnd","_Fragment","CardDetails","getUsersTweetsNextThunk","Home","NavLink","useEffect","getUsersTweetsThunk","to","FilteredUsers","CardsList"],"sourceRoot":""}